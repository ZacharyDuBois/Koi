#!/bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
# Night Updater
# https://github.com/ZacharyDuBois/Night-Uploader
version="v0.3"


##
# Variables
##

# All locations should be the full path to the directories with a trailing slash.
location=""
s3bucket=""
endLocation=""
templateLocation=""
# The next 7 are not recommend to edit but you may if you'd like.
indexFile="index.html"
indexFileLoc="$location""$indexFile"
listingFile="tmp"
listingFileLoc="$location""$listingFile"
newUploadsFile="New-Uploads.txt"
newUploadsFileLoc="$location""$newUploadsFile"
curTime=$(date '+%F %T')
# If you don't want to use Pushover, leave pushoverAppKey and/or pushoverUserKey set to "".
pushoverAppKey=""
pushoverUserKey=""
pushoverTitle="Night Uploader"
pushoverURL=""
pushoverURLTitle=""


##
# Startup Checks
##

# Check for root
if [[ "$(id -u)" == "0" ]]
then
  echo "Do not run this script as root."
  exit 1
fi

# Check for AWS CLI
which aws > /dev/null
checkForAWS=$?
if [[ "$checkForAWS" != "0" ]]
then 
  echo "You need AWS CLI to run this script."
  exit 1
fi

# Check for variables set correctly
if [[ "$location" == "" ]] && [[ "$s3bucket" == "" ]] && [[ "$endLocation" == "" ]] && [[ "$templateLocation" == "" ]] && [[ "$indexFile" == "" ]] && [[ "$indexFileLoc" == "" ]] && [[ "$listingFile" == "" ]] && [[ "$listingFileLoc" == "" ]] && [[ "$newUploadsFile" == "" ]] && [[ "$newUploadsFileLoc" == "" ]] && [[ "$curTime" == "" ]]
then
  echo "You have not set all the required variables in the variables block. Please edit them with the correct details."
  exit 1
fi

# Check if locations and files exist.
if ! [[ -d "$location" ]] && ! [[ -d "$endLocation" ]] && ! [[ -d "$templateLocation" ]] && ! [[ -r "$templateLocation""afterlist" ]] && ! [[ -r "$templateLocation""footer" ]] && ! [[ -r "$templateLocation""head" ]]
then
  echo "One or more of the folders and/or files does not exist."
  exit 1
fi

# Check if AWS is running already
retryCount=0
while ps aux | grep -v grep | grep "aws" > /dev/null
do
  if [[ "$retryCount" == 0 ]]
  then
    echo "AWS is currently running. Waiting for AWS to finish to avoid issues."
  fi
  echo -n "."
  retryCount=$((retryCount+1))
  sleep 5
done
if [[ "$retryCount" != 0 ]]
then
  echo
fi


##
# Start
##

pushoverSend() {
  message=$1
  if [[ "$pushoverAppKey" != "" ]] && [[ "$pushoverUserKey" != "" ]]
  then
    curl -s --form-string "token=$pushoverAppKey" --form-string "user=$pushoverUserKey" --form-string "url=$pushoverURL" --form-string "url_title=$pushoverURLTitle" --form-string "priority=0" --form-string "title=$pushoverTitle" --form-string "message=$message" https://api.pushover.net/1/messages.json > /dev/null
    pushoverStatus=$?
    if [[ "$pushoverStatus" == "0" ]]
    then
      echo "Pushover message sent successfully: $message"
    else
      echo "Pushover failed to send message: $message"
    fi
  else
    echo "No Pushover key set to send message: $message"
  fi
}

if [[ "$(ls $location)" == "" ]]
then
  # No Files
  echo "No files for upload, exiting."
  pushoverSend "No uploads tonight! Enjoy!"
else
  # Files
  echo "Files found, uploading $location ==> s3://"$s3bucket"/"
  pushoverSend "Starting to upload files to s3://"$s3bucket"/. Internet may slow down a bit."
  
  # Make a new files list
  echo "Generating new files list."
  ls $location | grep -v $newUploadsFile > $newUploadsFileLoc
  echo "Last Updated: $curTime" >> $newUploadsFileLoc
  
  # Upload
  echo "Starting upload to s3://"$s3bucket"/"
  aws s3 cp $location s3://"$s3bucket"/ --recursive --exclude ".*" --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers
  
  # Generate Index
  echo "Generating index file."
  pushoverSend "Generating index file."
  numberOfFiles=0
  aws s3 ls s3://"$s3bucket"/ | grep -v PRE | awk -F' ' '{ print $4 }' > $listingFileLoc
  sort -f $listingFileLoc -o $listingFileLoc
  cat "$templateLocation""head" > $indexFileLoc
  
  while read listItem
  do
    numberOfFiles=$(($numberOfFiles+1))
    echo "    <li><a href=\"/"$listItem"\">"$listItem"</a></li>" >> $indexFileLoc
  done < $listingFileLoc
  
  cat "$templateLocation""afterlist" >> $indexFileLoc
  echo "  <p><code>"$numberOfFiles" Items</code></p>" >> $indexFileLoc
  echo "  <p>Index Last Updated: <code>"$curTime"</code></p>" >> $indexFileLoc
  echo "  <p>Files uploaded and generated with <a href=\"https://bitbucket.org/Zachary_DuBois/night-uploader\">Night Uploader</a> <code>"$version"</code></p>" >> $indexFileLoc
  cat "$templateLocation""footer" >> $indexFileLoc
  
  # Upload Index
  echo "Uploading Index."
  aws s3 cp $indexFileLoc s3://"$s3bucket"/"$indexFile" --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers
  
  # Delete the new uploads file
  echo "Cleaning up."
  rm $newUploadsFileLoc
  rm $listingFileLoc
  rm $indexFileLoc
  
  # Move them to the done location.
  echo "Moving files to $endLocation..."
  mv "$location"* $endLocation
  pushoverSend "All done! Enjoy your uploads!"
fi


##
# Done
##

echo "Done"

exit 0
